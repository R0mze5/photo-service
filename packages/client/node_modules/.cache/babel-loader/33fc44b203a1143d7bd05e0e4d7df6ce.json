{"ast":null,"code":"var _jsxFileName = \"/home/romankh/development/projects/photo-service/packages/client/src/components/PostItem/PostItem.tsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport useInput from \"src/hooks/useInput\";\nimport { Avatar } from \"../Avatar\";\nimport { FatText } from \"../FatText\";\nimport { IconComment } from \"../Icons/IconComment\";\nimport { IconHeartEmpty } from \"../Icons/IconHeartEmpty\";\nimport { IconHeartFull } from \"../Icons/IconHeartFull\";\nimport { StyledContainer, StyledHeader, StyledUserColumn, StyledLocation, StyledFiles, StyledFile, StyledMeta, StyledButtons, StyledButton, StyledTimestamp, StyledTextarea, StyledFileImage, StyledComment, StyledCaption, StyledComments } from \"./PostItem.styled\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport { ADD_COMMENT, TOGGLE_LIKE } from \"./PostItem.queries\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostItem = ({\n  id,\n  location,\n  caption,\n  user,\n  files,\n  likesCount,\n  isLiked,\n  comments,\n  createdAt\n}) => {\n  _s();\n\n  const [isLikedPost, setIsLikedPost] = useState(isLiked);\n  const [likesCountPost, setLikesCountPost] = useState(likesCount);\n  const {\n    setValue: setCommentValue,\n    ...commentField\n  } = useInput(\"\");\n  const [currentItem, setCurrentItem] = useState(0);\n  const [selfComments, setSelfComments] = useState([]);\n  const totalFiles = files.length;\n  const [toggleLikeMutation] = useMutation(TOGGLE_LIKE, {\n    variables: {\n      postId: id\n    }\n  });\n  const [addCommentMutation] = useMutation(ADD_COMMENT);\n\n  const toggleLike = async () => {\n    const isNewLiked = !isLikedPost;\n    const initialLikesCount = likesCountPost;\n    setIsLikedPost(isNewLiked);\n    const newLikesCount = isNewLiked === true ? initialLikesCount + 1 : initialLikesCount - 1;\n    setLikesCountPost(newLikesCount);\n\n    try {\n      const {\n        data\n      } = await toggleLikeMutation();\n\n      if (typeof (data === null || data === void 0 ? void 0 : data.toggleLike) !== \"boolean\" || isNewLiked !== (data === null || data === void 0 ? void 0 : data.toggleLike)) {\n        throw new Error(\"not responded\");\n      }\n    } catch (error) {\n      setIsLikedPost(!isNewLiked);\n      setLikesCountPost(initialLikesCount);\n      toast.error(\"cant register like\");\n    }\n  };\n\n  const addComment = async event => {\n    if (event.charCode === 13 && !event.ctrlKey && !event.shiftKey) {\n      var _commentField$value;\n\n      event.preventDefault();\n\n      if (((_commentField$value = commentField.value) === null || _commentField$value === void 0 ? void 0 : _commentField$value.trim()) === \"\") {\n        toast.error(\"comment is required\");\n      }\n\n      try {\n        const {\n          data\n        } = await addCommentMutation({\n          variables: {\n            postId: id,\n            text: commentField.value\n          }\n        });\n\n        if (data === null || data === void 0 ? void 0 : data.addComment.id) {\n          setCommentValue(\"\");\n\n          if (data === null || data === void 0 ? void 0 : data.addComment) {\n            setSelfComments([...selfComments, data.addComment]);\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const slideNext = useCallback(() => {\n    if (currentItem === totalFiles - 1) {\n      setCurrentItem(0);\n    } else {\n      setCurrentItem(currentItem + 1);\n    }\n  }, [currentItem, totalFiles]); // const slidePrev = () => {\n  //   if (currentItem === 0) {\n  //     setCurrentItem(totalFiles - 1);\n  //   } else {\n  //     setCurrentItem(currentItem - 1);\n  //   }\n  // };\n\n  useEffect(() => {\n    if (totalFiles > 1) {\n      setTimeout(() => slideNext(), 3000);\n    }\n  }, [totalFiles, currentItem, slideNext]);\n  return /*#__PURE__*/_jsxDEV(StyledContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StyledHeader, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        url: user.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledUserColumn, {\n        children: [/*#__PURE__*/_jsxDEV(FatText, {\n          children: user.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledLocation, {\n          children: location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledFiles, {\n      children: files && files.map((file, index) => {\n        return /*#__PURE__*/_jsxDEV(StyledFile, {\n          isActive: index === currentItem,\n          children: /*#__PURE__*/_jsxDEV(StyledFileImage, {\n            src: file.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }, this)\n        }, file.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledMeta, {\n      children: [/*#__PURE__*/_jsxDEV(StyledButtons, {\n        children: [/*#__PURE__*/_jsxDEV(StyledButton, {\n          onClick: toggleLike,\n          children: isLikedPost ? /*#__PURE__*/_jsxDEV(IconHeartFull, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(IconHeartEmpty, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n          children: /*#__PURE__*/_jsxDEV(IconComment, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FatText, {\n        children: likesCountPost === 1 ? \"1 like\" : `${likesCountPost} likes`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), caption && /*#__PURE__*/_jsxDEV(StyledCaption, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: `/${user.userName}`,\n          children: /*#__PURE__*/_jsxDEV(FatText, {\n            children: user.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), caption]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), comments && /*#__PURE__*/_jsxDEV(StyledComments, {\n        children: [...comments, ...selfComments].map(comment => {\n          var _comment$user, _comment$user2;\n\n          return /*#__PURE__*/_jsxDEV(StyledComment, {\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/${comment === null || comment === void 0 ? void 0 : (_comment$user = comment.user) === null || _comment$user === void 0 ? void 0 : _comment$user.userName}`,\n              children: /*#__PURE__*/_jsxDEV(FatText, {\n                children: comment === null || comment === void 0 ? void 0 : (_comment$user2 = comment.user) === null || _comment$user2 === void 0 ? void 0 : _comment$user2.userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this), \" \", comment.text]\n          }, comment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledTimestamp, {\n        children: createdAt || \"recently\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledTextarea, {\n        placeholder: \"Add a comment\",\n        ...commentField,\n        onKeyPress: addComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostItem, \"UCAAMWAFxeuUtT/4nZbyAtnm5O8=\", false, function () {\n  return [useInput, useMutation, useMutation];\n});\n\n_c = PostItem;\nPostItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  caption: PropTypes.string.isRequired,\n  user: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    avatar: PropTypes.string,\n    userName: PropTypes.string.isRequired\n  }).isRequired,\n  files: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  likesCount: PropTypes.number.isRequired,\n  isLiked: PropTypes.bool.isRequired,\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    user: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      userName: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired).isRequired,\n  createdAt: PropTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["/home/romankh/development/projects/photo-service/packages/client/src/components/PostItem/PostItem.tsx"],"names":["PropTypes","useCallback","useEffect","useState","useInput","Avatar","FatText","IconComment","IconHeartEmpty","IconHeartFull","StyledContainer","StyledHeader","StyledUserColumn","StyledLocation","StyledFiles","StyledFile","StyledMeta","StyledButtons","StyledButton","StyledTimestamp","StyledTextarea","StyledFileImage","StyledComment","StyledCaption","StyledComments","useMutation","ADD_COMMENT","TOGGLE_LIKE","toast","Link","PostItem","id","location","caption","user","files","likesCount","isLiked","comments","createdAt","isLikedPost","setIsLikedPost","likesCountPost","setLikesCountPost","setValue","setCommentValue","commentField","currentItem","setCurrentItem","selfComments","setSelfComments","totalFiles","length","toggleLikeMutation","variables","postId","addCommentMutation","toggleLike","isNewLiked","initialLikesCount","newLikesCount","data","Error","error","addComment","event","charCode","ctrlKey","shiftKey","preventDefault","value","trim","text","console","log","slideNext","setTimeout","avatar","userName","map","file","index","url","comment","propTypes","string","isRequired","shape","arrayOf","number","bool"],"mappings":"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","sourcesContent":["import {\n  PostId,\n  User,\n  File,\n  CommentId,\n  Comment,\n} from \"@photo-service/contracts\";\nimport PropTypes from \"prop-types\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport useInput from \"src/hooks/useInput\";\nimport { Avatar } from \"../Avatar\";\nimport { FatText } from \"../FatText\";\nimport { IconComment } from \"../Icons/IconComment\";\nimport { IconHeartEmpty } from \"../Icons/IconHeartEmpty\";\nimport { IconHeartFull } from \"../Icons/IconHeartFull\";\n\nimport {\n  StyledContainer,\n  StyledHeader,\n  StyledUserColumn,\n  StyledLocation,\n  StyledFiles,\n  StyledFile,\n  StyledMeta,\n  StyledButtons,\n  StyledButton,\n  StyledTimestamp,\n  StyledTextarea,\n  StyledFileImage,\n  StyledComment,\n  StyledCaption,\n  StyledComments,\n} from \"./PostItem.styled\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport { ADD_COMMENT, TOGGLE_LIKE } from \"./PostItem.queries\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\n\ninterface PostItemProps {\n  id: PostId;\n  user: Pick<User, \"id\" | \"avatar\" | \"userName\">;\n  files: Array<Pick<File, \"id\" | \"url\">>;\n  likesCount: number;\n  isLiked: boolean;\n  location?: string | null;\n  caption: string;\n  comments: Array<{\n    id: CommentId;\n    text: string;\n    user: Pick<User, \"id\" | \"userName\">;\n  }>;\n  createdAt: string | null;\n}\n\nexport const PostItem: React.FC<PostItemProps> = ({\n  id,\n\n  location,\n  caption,\n  user,\n  files,\n  likesCount,\n  isLiked,\n  comments,\n  createdAt,\n}) => {\n  const [isLikedPost, setIsLikedPost] = useState(isLiked);\n  const [likesCountPost, setLikesCountPost] = useState(likesCount);\n  const { setValue: setCommentValue, ...commentField } = useInput(\"\");\n  const [currentItem, setCurrentItem] = useState(0);\n  const [selfComments, setSelfComments] = useState<\n    Array<{\n      id: CommentId;\n      text: string;\n      user: Pick<User, \"id\" | \"userName\">;\n    }>\n  >([]);\n  const totalFiles = files.length;\n\n  const [toggleLikeMutation] = useMutation<{ toggleLike: boolean }>(\n    TOGGLE_LIKE,\n    { variables: { postId: id } }\n  );\n\n  const [addCommentMutation] =\n    useMutation<{ addComment: Comment }>(ADD_COMMENT);\n\n  const toggleLike = async () => {\n    const isNewLiked = !isLikedPost;\n    const initialLikesCount = likesCountPost;\n    setIsLikedPost(isNewLiked);\n\n    const newLikesCount =\n      isNewLiked === true ? initialLikesCount + 1 : initialLikesCount - 1;\n\n    setLikesCountPost(newLikesCount);\n\n    try {\n      const { data } = await toggleLikeMutation();\n\n      if (\n        typeof data?.toggleLike !== \"boolean\" ||\n        isNewLiked !== data?.toggleLike\n      ) {\n        throw new Error(\"not responded\");\n      }\n    } catch (error) {\n      setIsLikedPost(!isNewLiked);\n      setLikesCountPost(initialLikesCount);\n      toast.error(\"cant register like\");\n    }\n  };\n\n  const addComment: React.KeyboardEventHandler = async (event) => {\n    if (event.charCode === 13 && !event.ctrlKey && !event.shiftKey) {\n      event.preventDefault();\n      if (commentField.value?.trim() === \"\") {\n        toast.error(\"comment is required\");\n      }\n      try {\n        const { data } = await addCommentMutation({\n          variables: { postId: id, text: commentField.value },\n        });\n        if (data?.addComment.id) {\n          setCommentValue(\"\");\n          if (data?.addComment) {\n            setSelfComments([...selfComments, data.addComment]);\n          }\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const slideNext = useCallback(() => {\n    if (currentItem === totalFiles - 1) {\n      setCurrentItem(0);\n    } else {\n      setCurrentItem(currentItem + 1);\n    }\n  }, [currentItem, totalFiles]);\n\n  // const slidePrev = () => {\n  //   if (currentItem === 0) {\n  //     setCurrentItem(totalFiles - 1);\n  //   } else {\n  //     setCurrentItem(currentItem - 1);\n  //   }\n  // };\n\n  useEffect(() => {\n    if (totalFiles > 1) {\n      setTimeout(() => slideNext(), 3000);\n    }\n  }, [totalFiles, currentItem, slideNext]);\n\n  return (\n    <StyledContainer>\n      <StyledHeader>\n        <Avatar url={user.avatar}></Avatar>\n        <StyledUserColumn>\n          <FatText>{user.userName}</FatText>\n          <StyledLocation>{location}</StyledLocation>\n        </StyledUserColumn>\n      </StyledHeader>\n      <StyledFiles>\n        {files &&\n          files.map((file, index) => {\n            return (\n              <StyledFile isActive={index === currentItem} key={file.id}>\n                <StyledFileImage src={file.url}></StyledFileImage>\n              </StyledFile>\n            );\n          })}\n      </StyledFiles>\n      <StyledMeta>\n        <StyledButtons>\n          <StyledButton onClick={toggleLike}>\n            {isLikedPost ? (\n              <IconHeartFull></IconHeartFull>\n            ) : (\n              <IconHeartEmpty></IconHeartEmpty>\n            )}\n          </StyledButton>\n          <StyledButton>\n            <IconComment></IconComment>\n          </StyledButton>\n        </StyledButtons>\n        <FatText>\n          {likesCountPost === 1 ? \"1 like\" : `${likesCountPost} likes`}\n        </FatText>\n        {caption && (\n          <StyledCaption>\n            <Link to={`/${user.userName}`}>\n              <FatText>{user.userName}</FatText>\n            </Link>\n            {caption}\n          </StyledCaption>\n        )}\n        {comments && (\n          <StyledComments>\n            {[...comments, ...selfComments].map((comment) => {\n              return (\n                <StyledComment key={comment.id}>\n                  <Link to={`/${comment?.user?.userName}`}>\n                    <FatText>{comment?.user?.userName}</FatText>\n                  </Link>{\" \"}\n                  {comment.text}\n                </StyledComment>\n              );\n            })}\n          </StyledComments>\n        )}\n        <StyledTimestamp>{createdAt || \"recently\"}</StyledTimestamp>\n        <StyledTextarea\n          placeholder={\"Add a comment\"}\n          {...commentField}\n          onKeyPress={addComment}\n        ></StyledTextarea>\n      </StyledMeta>\n    </StyledContainer>\n  );\n};\n\nPostItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  caption: PropTypes.string.isRequired,\n  user: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    avatar: PropTypes.string,\n    userName: PropTypes.string.isRequired,\n  }).isRequired,\n  files: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  likesCount: PropTypes.number.isRequired,\n  isLiked: PropTypes.bool.isRequired,\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      user: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        userName: PropTypes.string.isRequired,\n      }).isRequired,\n    }).isRequired\n  ).isRequired,\n  createdAt: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}