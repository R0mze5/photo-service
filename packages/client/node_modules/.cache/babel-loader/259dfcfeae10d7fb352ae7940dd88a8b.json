{"ast":null,"code":"export const defaults = {\n  isLoggedIn: Boolean(localStorage.getItem(\"token\")) || false\n};\nexport const resolvers = {\n  Mutation: {\n    logUserIn: (_, {\n      token\n    }, {\n      cache\n    }) => {\n      localStorage.setItem(\"token\", token);\n\n      try {\n        cache.writeData({\n          data: {\n            isLoggedIn: true\n          }\n        });\n      } catch (error) {\n        console.log(error);\n      }\n\n      return null;\n    },\n    logUserOut: (_, __, {\n      cache\n    }) => {\n      localStorage.removeItem(\"token\");\n      cache.writeData({\n        data: {\n          isLoggedIn: false\n        }\n      });\n      return null;\n    }\n  }\n};","map":{"version":3,"sources":["/home/romankh/development/projects/photo-service/packages/client/src/Apollo/LocalState.tsx"],"names":["defaults","isLoggedIn","Boolean","localStorage","getItem","resolvers","Mutation","logUserIn","_","token","cache","setItem","writeData","data","error","console","log","logUserOut","__","removeItem"],"mappings":"AAEA,OAAO,MAAMA,QAAQ,GAAG;AACtBC,EAAAA,UAAU,EAAEC,OAAO,CAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAP,IAA0C;AADhC,CAAjB;AAIP,OAAO,MAAMC,SAAoB,GAAG;AAClCC,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,EAAE,CAACC,CAAD,EAAI;AAAEC,MAAAA;AAAF,KAAJ,EAAkC;AAAEC,MAAAA;AAAF,KAAlC,KAAsD;AAC/DP,MAAAA,YAAY,CAACQ,OAAb,CAAqB,OAArB,EAA8BF,KAA9B;;AAEA,UAAI;AACFC,QAAAA,KAAK,CAACE,SAAN,CAAgB;AACdC,UAAAA,IAAI,EAAE;AAAEZ,YAAAA,UAAU,EAAE;AAAd;AADQ,SAAhB;AAGD,OAJD,CAIE,OAAOa,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;;AAED,aAAO,IAAP;AACD,KAbO;AAcRG,IAAAA,UAAU,EAAE,CAACT,CAAD,EAAIU,EAAJ,EAAQ;AAAER,MAAAA;AAAF,KAAR,KAA4B;AACtCP,MAAAA,YAAY,CAACgB,UAAb,CAAwB,OAAxB;AACAT,MAAAA,KAAK,CAACE,SAAN,CAAgB;AACdC,QAAAA,IAAI,EAAE;AACJZ,UAAAA,UAAU,EAAE;AADR;AADQ,OAAhB;AAMA,aAAO,IAAP;AACD;AAvBO;AADwB,CAA7B","sourcesContent":["import { Resolvers } from \"apollo-boost\";\n\nexport const defaults = {\n  isLoggedIn: Boolean(localStorage.getItem(\"token\")) || false,\n};\n\nexport const resolvers: Resolvers = {\n  Mutation: {\n    logUserIn: (_, { token }: { token: string }, { cache }): null => {\n      localStorage.setItem(\"token\", token);\n\n      try {\n        cache.writeData({\n          data: { isLoggedIn: true },\n        });\n      } catch (error) {\n        console.log(error);\n      }\n\n      return null;\n    },\n    logUserOut: (_, __, { cache }): null => {\n      localStorage.removeItem(\"token\");\n      cache.writeData({\n        data: {\n          isLoggedIn: false,\n        },\n      });\n\n      return null;\n    },\n  },\n};\n"]},"metadata":{},"sourceType":"module"}