{"ast":null,"code":"var _jsxFileName = \"/home/romankh/development/projects/photo-service/packages/client/src/Routes/Auth/Auth.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport Button from \"../../components/Button\";\nimport Input from \"../../components/Input\";\nimport useInput from \"../../hooks/useInput\";\nimport { CONFIRM_SECRET, CREATE_ACCOUNT, LOCAL_LOG_IN, LOG_IN } from \"./Auth.queries\";\nimport { toast } from \"react-toastify\";\nimport { Form, Link, StateChanger, Wrapper } from \"./Auth.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Auth = () => {\n  _s();\n\n  const [action, setAction] = useState(\"logIn\");\n  const username = useInput(\"\");\n  const secret = useInput(\"\");\n  const firstName = useInput(\"\");\n  const lastName = useInput(\"\");\n  const email = useInput(\"admin@admin.com\");\n  const [requestSecret] = useMutation(LOG_IN, {\n    variables: {\n      email: email.value\n    },\n    update: (_, {\n      data\n    }) => {\n      if (!(data === null || data === void 0 ? void 0 : data.requestSecret)) {\n        toast.error(\"You don't have an account yet, create one\");\n        setTimeout(() => setAction(\"signUp\"), 2000);\n      } else {\n        toast.success(\"Check your inbox for your login secret\");\n        setAction(\"confirmSecret\");\n      }\n    }\n  });\n  const [createAccount] = useMutation(CREATE_ACCOUNT, {\n    variables: {\n      userName: username.value,\n      email: email.value,\n      firstName: firstName.value,\n      lastName: lastName.value\n    },\n    update: (_, {\n      data\n    }) => {\n      if (!(data === null || data === void 0 ? void 0 : data.createAccount)) {\n        toast.error(\"You don't have an account yet, create one\");\n        setTimeout(() => setAction(\"signUp\"), 2000);\n      } else {\n        requestSecret();\n      }\n    }\n  });\n  const [confirmSecretMutation] = useMutation(CONFIRM_SECRET, {\n    variables: {\n      email: email.value,\n      secret: secret.value\n    }\n  });\n  const [loginLocalMutation] = useMutation(LOCAL_LOG_IN);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (action === \"logIn\") {\n      if (email.value !== \"\") {\n        try {\n          await requestSecret();\n        } catch (error) {\n          toast.error(\"Can't request secret, try again\");\n        }\n      } else {\n        toast.error(\"Email is required\");\n      }\n    } else if (action === \"signUp\") {\n      if (username.value !== \"\" && email.value !== \"\" && firstName.value !== \"\" && lastName.value !== \"\") {\n        try {\n          await createAccount();\n        } catch (error) {\n          toast.error(error.message);\n        }\n      }\n    } else if (action === \"confirmSecret\") {\n      if (email.value !== \"\" && secret.value !== \"\") {\n        try {\n          const {\n            data\n          } = await confirmSecretMutation();\n          const token = data === null || data === void 0 ? void 0 : data.confirmSecret;\n\n          if (typeof token !== \"string\" || token === \"\") {\n            throw new Error();\n          } else {\n            loginLocalMutation({\n              variables: {\n                token\n              }\n            });\n          }\n        } catch (error) {\n          toast.error(\"Can't confirm secret\");\n        }\n      } else {\n        toast.error(\"All fields required\");\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      children: [action === \"logIn\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Log In | Photo service\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Email\",\n            type: \"email\",\n            ...email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"Log in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), action === \"confirmSecret\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Sign Up | Photo service\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Email\",\n            type: \"email\",\n            ...email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Secret from Email\",\n            ...secret\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), action === \"signUp\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Confirm Secret | Photo service\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"First Name\",\n            ...firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Last Name\",\n            ...lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Email\",\n            type: \"email\",\n            ...email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Username\",\n            ...username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StateChanger, {\n      children: action === \"logIn\" ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Don't have an account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          onClick: () => setAction(\"signUp\"),\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Have an account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n          onClick: () => setAction(\"logIn\"),\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"3MzIQvgdVQSAvP0mvDxvP3P02O4=\", false, function () {\n  return [useInput, useInput, useInput, useInput, useInput, useMutation, useMutation, useMutation, useMutation];\n});\n\n_c = Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/home/romankh/development/projects/photo-service/packages/client/src/Routes/Auth/Auth.tsx"],"names":["useState","useMutation","Button","Input","useInput","CONFIRM_SECRET","CREATE_ACCOUNT","LOCAL_LOG_IN","LOG_IN","toast","Form","Link","StateChanger","Wrapper","Auth","action","setAction","username","secret","firstName","lastName","email","requestSecret","variables","value","update","_","data","error","setTimeout","success","createAccount","userName","confirmSecretMutation","loginLocalMutation","handleSubmit","event","preventDefault","message","token","confirmSecret","Error"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport Button from \"../../components/Button\";\nimport Input from \"../../components/Input\";\nimport useInput from \"../../hooks/useInput\";\nimport Helmet from \"react-helmet\";\nimport {\n  CONFIRM_SECRET,\n  CREATE_ACCOUNT,\n  LOCAL_LOG_IN,\n  LOG_IN,\n} from \"./Auth.queries\";\nimport { toast } from \"react-toastify\";\nimport { Form, Link, StateChanger, Wrapper } from \"./Auth.styled\";\n\nexport const Auth: React.FC = () => {\n  const [action, setAction] = useState<\"logIn\" | \"signUp\" | \"confirmSecret\">(\n    \"logIn\"\n  );\n\n  const username = useInput(\"\");\n  const secret = useInput(\"\");\n  const firstName = useInput(\"\");\n  const lastName = useInput(\"\");\n  const email = useInput(\"admin@admin.com\");\n\n  const [requestSecret] = useMutation<{ requestSecret: boolean }>(LOG_IN, {\n    variables: { email: email.value },\n    update: (_, { data }): void => {\n      if (!data?.requestSecret) {\n        toast.error(\"You don't have an account yet, create one\");\n        setTimeout(() => setAction(\"signUp\"), 2000);\n      } else {\n        toast.success(\"Check your inbox for your login secret\");\n        setAction(\"confirmSecret\");\n      }\n    },\n  });\n\n  const [createAccount] = useMutation<{ createAccount: boolean }>(\n    CREATE_ACCOUNT,\n    {\n      variables: {\n        userName: username.value,\n        email: email.value,\n        firstName: firstName.value,\n        lastName: lastName.value,\n      },\n      update: (_, { data }): void => {\n        if (!data?.createAccount) {\n          toast.error(\"You don't have an account yet, create one\");\n          setTimeout(() => setAction(\"signUp\"), 2000);\n        } else {\n          requestSecret();\n        }\n      },\n    }\n  );\n\n  const [confirmSecretMutation] = useMutation<{ confirmSecret: string }>(\n    CONFIRM_SECRET,\n    {\n      variables: {\n        email: email.value,\n        secret: secret.value,\n      },\n    }\n  );\n\n  const [loginLocalMutation] = useMutation(LOCAL_LOG_IN);\n\n  const handleSubmit: React.FormEventHandler = async (event) => {\n    event.preventDefault();\n\n    if (action === \"logIn\") {\n      if (email.value !== \"\") {\n        try {\n          await requestSecret();\n        } catch (error) {\n          toast.error(\"Can't request secret, try again\");\n        }\n      } else {\n        toast.error(\"Email is required\");\n      }\n    } else if (action === \"signUp\") {\n      if (\n        username.value !== \"\" &&\n        email.value !== \"\" &&\n        firstName.value !== \"\" &&\n        lastName.value !== \"\"\n      ) {\n        try {\n          await createAccount();\n        } catch (error) {\n          toast.error((error as { message: string }).message);\n        }\n      }\n    } else if (action === \"confirmSecret\") {\n      if (email.value !== \"\" && secret.value !== \"\") {\n        try {\n          const { data } = await confirmSecretMutation();\n\n          const token = data?.confirmSecret;\n          if (typeof token !== \"string\" || token === \"\") {\n            throw new Error();\n          } else {\n            loginLocalMutation({ variables: { token } });\n          }\n        } catch (error) {\n          toast.error(\"Can't confirm secret\");\n        }\n      } else {\n        toast.error(\"All fields required\");\n      }\n    }\n  };\n\n  return (\n    <Wrapper>\n      <Form>\n        {action === \"logIn\" && (\n          <>\n            <title>Log In | Photo service</title>\n            <form action=\"\" onSubmit={handleSubmit}>\n              <Input placeholder={\"Email\"} type={\"email\"} {...email}></Input>\n              <Button text={\"Log in\"}></Button>\n            </form>\n          </>\n        )}\n        {action === \"confirmSecret\" && (\n          <>\n            <title>Sign Up | Photo service</title>\n            <form action=\"\" onSubmit={handleSubmit}>\n              <Input placeholder={\"Email\"} type={\"email\"} {...email}></Input>\n              <Input placeholder={\"Secret from Email\"} {...secret}></Input>\n              <Button text={\"Confirm\"}></Button>\n            </form>\n          </>\n        )}\n\n        {action === \"signUp\" && (\n          <>\n            <title>Confirm Secret | Photo service</title>\n            <form action=\"\" onSubmit={handleSubmit}>\n              <Input placeholder={\"First Name\"} {...firstName}></Input>\n              <Input placeholder={\"Last Name\"} {...lastName}></Input>\n              <Input placeholder={\"Email\"} type={\"email\"} {...email}></Input>\n              <Input placeholder={\"Username\"} {...username}></Input>\n              <Button text={\"Sign Up\"}></Button>\n            </form>\n          </>\n        )}\n      </Form>\n      <StateChanger>\n        {action === \"logIn\" ? (\n          <>\n            Don't have an account?{\" \"}\n            <Link onClick={() => setAction(\"signUp\")}>Sign Up</Link>\n          </>\n        ) : (\n          <>\n            Have an account?{\" \"}\n            <Link onClick={() => setAction(\"logIn\")}>Sign In</Link>\n          </>\n        )}\n      </StateChanger>\n    </Wrapper>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}