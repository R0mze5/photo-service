{"ast":null,"code":"var _jsxFileName = \"/home/romankh/development/projects/photo-service/packages/client/src/components/PostItem/PostItem.tsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport useInput from \"src/hooks/useInput\";\nimport { Avatar } from \"../Avatar\";\nimport { FatText } from \"../FatText\";\nimport { IconComment } from \"../Icons/IconComment\";\nimport { IconHeartEmpty } from \"../Icons/IconHeartEmpty\";\nimport { IconHeartFull } from \"../Icons/IconHeartFull\";\nimport { StyledContainer, StyledHeader, StyledUserColumn, StyledLocation, StyledFiles, StyledFile, StyledMeta, StyledButtons, StyledButton, StyledTimestamp, StyledTextarea, StyledFileImage } from \"./PostItem.styled\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport { ADD_COMMENT, TOGGLE_LIKE } from \"./PostItem.queries\";\nimport { toast } from \"react-toastify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostItem = ({\n  id,\n  location,\n  caption,\n  user,\n  files,\n  likesCount,\n  isLiked,\n  comments,\n  createdAt\n}) => {\n  _s();\n\n  const [isLikedPost, setIsLikedPost] = useState(isLiked);\n  const [likesCountPost, setLikesCountPost] = useState(likesCount);\n  const comment = useInput(\"\");\n  const [currentItem, setCurrentItem] = useState(0);\n  const totalFiles = files.length;\n  const [toggleLikeMutation] = useMutation(TOGGLE_LIKE, {\n    variables: {\n      postId: id\n    }\n  });\n  const [addCommentMutation] = useMutation(ADD_COMMENT);\n\n  const toggleLike = async () => {// const isNewLiked = !isLikedPost;\n    // setIsLikedPost(isNewLiked);\n    // const newLikesCount = isNewLiked ? likesCount + 1 : likesCount - 1;\n    // setLikesCountPost(newLikesCount);\n    // try {\n    //   const { data } = await toggleLikeMutation();\n    //   if (\n    //     typeof data?.toggleLike !== \"boolean\" ||\n    //     isNewLiked !== data?.toggleLike\n    //   ) {\n    //     throw new Error(\"not responded\");\n    //   }\n    // } catch (error) {\n    //   setIsLikedPost(!isNewLiked);\n    //   setLikesCountPost(!isNewLiked ? likesCount + 1 : likesCount - 1);\n    //   toast.error(\"cant register like\");\n    // }\n  };\n\n  const addComment = async event => {\n    if (event.keyCode === 13) {\n      if (comment.value === \"\") {\n        toast.error(\"comment is required\");\n        return;\n      }\n\n      try {\n        const {\n          data\n        } = await addCommentMutation({\n          variables: {\n            postId: id,\n            text: comment.value\n          }\n        });\n\n        if (data === null || data === void 0 ? void 0 : data.addComment.id) {\n          // comment.onChange(\"\");\n          console.log(data === null || data === void 0 ? void 0 : data.addComment);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const slideNext = useCallback(() => {\n    if (currentItem === totalFiles - 1) {\n      setCurrentItem(0);\n    } else {\n      setCurrentItem(currentItem + 1);\n    }\n  }, [currentItem, totalFiles]); // const slidePrev = () => {\n  //   if (currentItem === 0) {\n  //     setCurrentItem(totalFiles - 1);\n  //   } else {\n  //     setCurrentItem(currentItem - 1);\n  //   }\n  // };\n\n  useEffect(() => {\n    if (totalFiles > 1) {\n      setTimeout(() => slideNext(), 3000);\n    }\n  }, [totalFiles, currentItem, slideNext]);\n  return /*#__PURE__*/_jsxDEV(StyledContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StyledHeader, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        url: user.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledUserColumn, {\n        children: [/*#__PURE__*/_jsxDEV(FatText, {\n          children: user.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledLocation, {\n          children: location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledFiles, {\n      children: files && files.map((file, index) => {\n        return /*#__PURE__*/_jsxDEV(StyledFile, {\n          isActive: index === currentItem,\n          children: /*#__PURE__*/_jsxDEV(StyledFileImage, {\n            src: file.url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this)\n        }, file.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledMeta, {\n      children: [/*#__PURE__*/_jsxDEV(StyledButtons, {\n        children: [/*#__PURE__*/_jsxDEV(StyledButton, {\n          onClick: toggleLike,\n          children: isLikedPost ? /*#__PURE__*/_jsxDEV(IconHeartFull, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(IconHeartEmpty, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n          children: /*#__PURE__*/_jsxDEV(IconComment, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FatText, {\n        children: likesCountPost === 1 ? \"1 like\" : `${likesCount} likes`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledTimestamp, {\n        children: createdAt || \"recently\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledTextarea, {\n        placeholder: \"Add a comment\",\n        ...comment,\n        onKeyUp: addComment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostItem, \"wIJIBn6OOF0fs0Z9MLdQvsN7qOE=\", false, function () {\n  return [useInput, useMutation, useMutation];\n});\n\n_c = PostItem;\nPostItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  caption: PropTypes.string.isRequired,\n  user: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    avatar: PropTypes.string,\n    userName: PropTypes.string.isRequired\n  }).isRequired,\n  files: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  likesCount: PropTypes.number.isRequired,\n  isLiked: PropTypes.bool.isRequired,\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    user: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      userName: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired).isRequired,\n  createdAt: PropTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["/home/romankh/development/projects/photo-service/packages/client/src/components/PostItem/PostItem.tsx"],"names":["PropTypes","useCallback","useEffect","useState","useInput","Avatar","FatText","IconComment","IconHeartEmpty","IconHeartFull","StyledContainer","StyledHeader","StyledUserColumn","StyledLocation","StyledFiles","StyledFile","StyledMeta","StyledButtons","StyledButton","StyledTimestamp","StyledTextarea","StyledFileImage","useMutation","ADD_COMMENT","TOGGLE_LIKE","toast","PostItem","id","location","caption","user","files","likesCount","isLiked","comments","createdAt","isLikedPost","setIsLikedPost","likesCountPost","setLikesCountPost","comment","currentItem","setCurrentItem","totalFiles","length","toggleLikeMutation","variables","postId","addCommentMutation","toggleLike","addComment","event","keyCode","value","error","data","text","console","log","slideNext","setTimeout","avatar","userName","map","file","index","url","propTypes","string","isRequired","shape","arrayOf","number","bool"],"mappings":"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","sourcesContent":["import {\n  PostId,\n  User,\n  File,\n  CommentId,\n  Comment,\n} from \"@photo-service/contracts\";\nimport PropTypes from \"prop-types\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport useInput from \"src/hooks/useInput\";\nimport { Avatar } from \"../Avatar\";\nimport { FatText } from \"../FatText\";\nimport { IconComment } from \"../Icons/IconComment\";\nimport { IconHeartEmpty } from \"../Icons/IconHeartEmpty\";\nimport { IconHeartFull } from \"../Icons/IconHeartFull\";\n\nimport {\n  StyledContainer,\n  StyledHeader,\n  StyledUserColumn,\n  StyledLocation,\n  StyledFiles,\n  StyledFile,\n  StyledMeta,\n  StyledButtons,\n  StyledButton,\n  StyledTimestamp,\n  StyledTextarea,\n  StyledFileImage,\n} from \"./PostItem.styled\";\nimport { useMutation } from \"react-apollo-hooks\";\nimport { ADD_COMMENT, TOGGLE_LIKE } from \"./PostItem.queries\";\nimport { toast } from \"react-toastify\";\n\ninterface PostItemProps {\n  id: PostId;\n  user: Pick<User, \"id\" | \"avatar\" | \"userName\">;\n  files: Array<Pick<File, \"id\" | \"url\">>;\n  likesCount: number;\n  isLiked: boolean;\n  location?: string | null;\n  caption: string;\n  comments: Array<{\n    id: CommentId;\n    text: string;\n    user: Pick<User, \"id\" | \"userName\">;\n  }>;\n  createdAt: string | null;\n}\n\nexport const PostItem: React.FC<PostItemProps> = ({\n  id,\n\n  location,\n  caption,\n  user,\n  files,\n  likesCount,\n  isLiked,\n  comments,\n  createdAt,\n}) => {\n  const [isLikedPost, setIsLikedPost] = useState(isLiked);\n  const [likesCountPost, setLikesCountPost] = useState(likesCount);\n  const comment = useInput(\"\");\n  const [currentItem, setCurrentItem] = useState(0);\n  const totalFiles = files.length;\n\n  const [toggleLikeMutation] = useMutation<{ toggleLike: boolean }>(\n    TOGGLE_LIKE,\n    { variables: { postId: id } }\n  );\n\n  const [addCommentMutation] =\n    useMutation<{ addComment: Comment }>(ADD_COMMENT);\n\n  const toggleLike = async () => {\n    // const isNewLiked = !isLikedPost;\n    // setIsLikedPost(isNewLiked);\n    // const newLikesCount = isNewLiked ? likesCount + 1 : likesCount - 1;\n    // setLikesCountPost(newLikesCount);\n    // try {\n    //   const { data } = await toggleLikeMutation();\n    //   if (\n    //     typeof data?.toggleLike !== \"boolean\" ||\n    //     isNewLiked !== data?.toggleLike\n    //   ) {\n    //     throw new Error(\"not responded\");\n    //   }\n    // } catch (error) {\n    //   setIsLikedPost(!isNewLiked);\n    //   setLikesCountPost(!isNewLiked ? likesCount + 1 : likesCount - 1);\n    //   toast.error(\"cant register like\");\n    // }\n  };\n\n  const addComment: React.KeyboardEventHandler = async (event) => {\n    if (event.keyCode === 13) {\n      if (comment.value === \"\") {\n        toast.error(\"comment is required\");\n        return;\n      }\n      try {\n        const { data } = await addCommentMutation({\n          variables: { postId: id, text: comment.value },\n        });\n        if (data?.addComment.id) {\n          // comment.onChange(\"\");\n          console.log(data?.addComment);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  };\n\n  const slideNext = useCallback(() => {\n    if (currentItem === totalFiles - 1) {\n      setCurrentItem(0);\n    } else {\n      setCurrentItem(currentItem + 1);\n    }\n  }, [currentItem, totalFiles]);\n\n  // const slidePrev = () => {\n  //   if (currentItem === 0) {\n  //     setCurrentItem(totalFiles - 1);\n  //   } else {\n  //     setCurrentItem(currentItem - 1);\n  //   }\n  // };\n\n  useEffect(() => {\n    if (totalFiles > 1) {\n      setTimeout(() => slideNext(), 3000);\n    }\n  }, [totalFiles, currentItem, slideNext]);\n\n  return (\n    <StyledContainer>\n      <StyledHeader>\n        <Avatar url={user.avatar}></Avatar>\n        <StyledUserColumn>\n          <FatText>{user.userName}</FatText>\n          <StyledLocation>{location}</StyledLocation>\n        </StyledUserColumn>\n      </StyledHeader>\n      <StyledFiles>\n        {files &&\n          files.map((file, index) => {\n            return (\n              <StyledFile isActive={index === currentItem} key={file.id}>\n                <StyledFileImage src={file.url}></StyledFileImage>\n              </StyledFile>\n            );\n          })}\n      </StyledFiles>\n      <StyledMeta>\n        <StyledButtons>\n          <StyledButton onClick={toggleLike}>\n            {isLikedPost ? (\n              <IconHeartFull></IconHeartFull>\n            ) : (\n              <IconHeartEmpty></IconHeartEmpty>\n            )}\n          </StyledButton>\n          <StyledButton>\n            <IconComment></IconComment>\n          </StyledButton>\n        </StyledButtons>\n        <FatText>\n          {likesCountPost === 1 ? \"1 like\" : `${likesCount} likes`}\n        </FatText>\n        <StyledTimestamp>{createdAt || \"recently\"}</StyledTimestamp>\n        <StyledTextarea\n          placeholder={\"Add a comment\"}\n          {...comment}\n          onKeyUp={addComment}\n        ></StyledTextarea>\n      </StyledMeta>\n    </StyledContainer>\n  );\n};\n\nPostItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  caption: PropTypes.string.isRequired,\n  user: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    avatar: PropTypes.string,\n    userName: PropTypes.string.isRequired,\n  }).isRequired,\n  files: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  likesCount: PropTypes.number.isRequired,\n  isLiked: PropTypes.bool.isRequired,\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      user: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        userName: PropTypes.string.isRequired,\n      }).isRequired,\n    }).isRequired\n  ).isRequired,\n  createdAt: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}