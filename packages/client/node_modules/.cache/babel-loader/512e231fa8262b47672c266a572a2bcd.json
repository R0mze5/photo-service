{"ast":null,"code":"var _jsxFileName = \"/home/romankh/development/projects/photo-service/packages/client/src/Routes/Feed/Feed.tsx\",\n    _s = $RefreshSig$();\n\nimport { useQuery } from \"react-apollo-hooks\";\nimport { Loader } from \"src/components/Loader\";\nimport { GET_FEED } from \"./Feed.queries\";\nimport { Container } from \"./Feed.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Feed = () => {\n  _s();\n\n  const {\n    data,\n    loading\n  } = useQuery(GET_FEED);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 33\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Feed, \"uHu6+Av6iz/Cemw652GCrFuaHvo=\", false, function () {\n  return [useQuery];\n});\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/home/romankh/development/projects/photo-service/packages/client/src/Routes/Feed/Feed.tsx"],"names":["useQuery","Loader","GET_FEED","Container","Feed","data","loading","console","log"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,oBAAzB;AACA,SAASC,MAAT,QAAuB,uBAAvB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,eAA1B;;AAEA,OAAO,MAAMC,IAAc,GAAG,MAAM;AAAA;;AAClC,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBN,QAAQ,CAAcE,QAAd,CAAlC;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEA,sBAAO,QAAC,SAAD;AAAA,cAAYC,OAAO,iBAAI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAvB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CANM;;GAAMF,I;UACeJ,Q;;;KADfI,I","sourcesContent":["import { Post } from \"@photo-service/contracts\";\nimport { useQuery } from \"react-apollo-hooks\";\nimport { Loader } from \"src/components/Loader\";\nimport { GET_FEED } from \"./Feed.queries\";\nimport { Container } from \"./Feed.styled\";\n\nexport const Feed: React.FC = () => {\n  const { data, loading } = useQuery<Array<Post>>(GET_FEED);\n\n  console.log(data);\n\n  return <Container>{loading && <Loader></Loader>}</Container>;\n};\n"]},"metadata":{},"sourceType":"module"}