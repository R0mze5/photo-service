{"ast":null,"code":"var _jsxFileName = \"/home/romankh/development/projects/photo-service/packages/client/src/components/PostItem/PostItem.tsx\",\n    _s = $RefreshSig$();\n\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport useInput from \"src/hooks/useInput\";\nimport { Avatar } from \"../Avatar\";\nimport { FatText } from \"../FatText\";\nimport { StyledContainer, StyledHeader, StyledUserColumn, StyledLocation, StyledFiles, StyledFile } from \"./PostItem.styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PostItem = ({\n  id,\n  location,\n  caption,\n  user,\n  files,\n  likesCount,\n  isLiked,\n  comments,\n  createdAt\n}) => {\n  _s();\n\n  const [isLikedPost, setIsLikedPost] = useState(isLiked);\n  const [likesCountPost, setLikesCountPost] = useState(likesCount);\n  const comment = useInput(\"\");\n  console.log(files);\n  return /*#__PURE__*/_jsxDEV(StyledContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StyledHeader, {\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        url: user.avatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledUserColumn, {\n        children: [/*#__PURE__*/_jsxDEV(FatText, {\n          children: user.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledLocation, {\n          children: location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledFiles, {\n      children: files && files.map(file => {\n        return /*#__PURE__*/_jsxDEV(StyledFile, {\n          src: file.url\n        }, file.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostItem, \"/1DDuIRPoOwU1GJrpOTwY1swAtw=\", false, function () {\n  return [useInput];\n});\n\n_c = PostItem;\nPostItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  caption: PropTypes.string.isRequired,\n  user: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    avatar: PropTypes.string,\n    userName: PropTypes.string.isRequired\n  }).isRequired,\n  files: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n  likesCount: PropTypes.number.isRequired,\n  isLiked: PropTypes.bool.isRequired,\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired,\n    user: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      userName: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired).isRequired,\n  createdAt: PropTypes.string\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"PostItem\");","map":{"version":3,"sources":["/home/romankh/development/projects/photo-service/packages/client/src/components/PostItem/PostItem.tsx"],"names":["PropTypes","useState","useInput","Avatar","FatText","StyledContainer","StyledHeader","StyledUserColumn","StyledLocation","StyledFiles","StyledFile","PostItem","id","location","caption","user","files","likesCount","isLiked","comments","createdAt","isLikedPost","setIsLikedPost","likesCountPost","setLikesCountPost","comment","console","log","avatar","userName","map","file","url","propTypes","string","isRequired","shape","arrayOf","number","bool","text"],"mappings":"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","sourcesContent":["import { PostId, User, File, CommentId } from \"@photo-service/contracts\";\nimport PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport useInput from \"src/hooks/useInput\";\nimport { Avatar } from \"../Avatar\";\nimport { FatText } from \"../FatText\";\nimport {\n  StyledContainer,\n  StyledHeader,\n  StyledUserColumn,\n  StyledLocation,\n  StyledFiles,\n  StyledFile,\n} from \"./PostItem.styled\";\n\ninterface PostItemProps {\n  id: PostId;\n  user: Pick<User, \"id\" | \"avatar\" | \"userName\">;\n  files: Array<Pick<File, \"id\" | \"url\">>;\n  likesCount: number;\n  isLiked: boolean;\n  location?: string | null;\n  caption: string;\n  comments: Array<{\n    id: CommentId;\n    text: string;\n    user: Pick<User, \"id\" | \"userName\">;\n  }>;\n  createdAt: string | null;\n}\n\nexport const PostItem: React.FC<PostItemProps> = ({\n  id,\n  location,\n  caption,\n  user,\n  files,\n  likesCount,\n  isLiked,\n  comments,\n  createdAt,\n}) => {\n  const [isLikedPost, setIsLikedPost] = useState(isLiked);\n  const [likesCountPost, setLikesCountPost] = useState(likesCount);\n  const comment = useInput(\"\");\n  console.log(files);\n\n  return (\n    <StyledContainer>\n      <StyledHeader>\n        <Avatar url={user.avatar}></Avatar>\n        <StyledUserColumn>\n          <FatText>{user.userName}</FatText>\n          <StyledLocation>{location}</StyledLocation>\n        </StyledUserColumn>\n      </StyledHeader>\n      <StyledFiles>\n        {files &&\n          files.map((file) => {\n            return <StyledFile src={file.url} key={file.id}></StyledFile>;\n          })}\n      </StyledFiles>\n    </StyledContainer>\n  );\n};\n\nPostItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  location: PropTypes.string,\n  caption: PropTypes.string.isRequired,\n  user: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    avatar: PropTypes.string,\n    userName: PropTypes.string.isRequired,\n  }).isRequired,\n  files: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n  likesCount: PropTypes.number.isRequired,\n  isLiked: PropTypes.bool.isRequired,\n  comments: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired,\n      user: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        userName: PropTypes.string.isRequired,\n      }).isRequired,\n    }).isRequired\n  ).isRequired,\n  createdAt: PropTypes.string,\n};\n"]},"metadata":{},"sourceType":"module"}