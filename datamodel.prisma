type User {
  id: ID! @id
  avatar: String
  userName: String! @unique
  email: String! @unique
  firstName: String @default(value: "")
  lastName: String
  bio: String
  posts: [Post!]! @relation(name: "PostsOfUserRelation" onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikesOfUserRelation" onDelete: CASCADE)
  rooms: [Room!]! @relation(name: "RoomsOfUserRelation" onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfUserRelation" onDelete: CASCADE)
  following: [User!]! @relation(name: "FollowRelation")
  followers: [User!]! @relation(name: "FollowRelation")
  loginSecret: String
}

type Post {
  id: ID! @id
  files: [File!]! @relation(name: "FileOfPostRelation" onDelete: CASCADE)
  location: String
  caption: String!
  user: User! @relation(name: "PostsOfUserRelation")
  likes: [Like!]! @relation(name: "LikeOfPostRelation" onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfPostRelation" onDelete: CASCADE)
}

type Like {
  id: ID! @id
  user: User! @relation(name: "LikesOfUserRelation")
  post: Post! @relation(name: "LikeOfPostRelation")
}

type Comment {
  id: ID! @id
  text: String!
  user: User! @relation(name: "CommentsOfUserRelation")
  post: Post! @relation(name: "CommentsOfPostRelation")
}

type File {
  id: ID! @id
  url: String!
  post: Post! @relation(name: "FileOfPostRelation")
}

type Room {
  id: ID! @id
  participants: [User!]! @relation(name: "RoomsOfUserRelation")
  messages: [Message!]! @relation(name: "MessagesOfRoomRelation" onDelete: CASCADE)
}

type Message {
  id: ID! @id
  text: String!
  sender: User! @relation(name: "From")
  recipient: User! @relation(name: "To")
  room: Room! @relation(name: "MessagesOfRoomRelation")
}